module srlSelector(instruction, srlEnable);
  input [31:0] instruction;
  output [3:0] srlEnable;
  wire n2, n5, n13, n30, aux1, aux2, aux3;
  //n2 = bit 2 negado
  
  not(n2, instruction[2]);
  not(n5, instruction[5]);
  not(n13, instruction[13]);
  not(n30, instruction[30]);
  
  and(aux1, n2, instruction[5], n30);
  or(aux2, aux1, n5);
  and(aux3, aux2, instruction[4], instruction[12], n13, instruction[14]);
  assign srlEnable = aux3*1;
endmodule

module addSelector(instruction, addEnable);
  input [31:0] instruction;
  output [3:0] addEnable;
  wire n2, n4, n5, n12, n13, n14, n25, n30, aux1, aux2, aux3, aux4;
  
  //n2 = bit 2 negado
  not(n2, instruction[2]);
  not(n4, instruction[4]);
  not(n5, instruction[5]);
  not(n12, instruction[12]);
  not(n13, instruction[13]);
  not(n14, instruction[14]);
  not(n25, instruction[25]);
  not(n30, instruction[30]);
  
  and(aux1, n2, instruction[5], n25, n30);
  or(aux2, aux1, n5);
  and(aux3, aux2, instruction[4], n12, n13, n14);
  or(aux4, aux3, n4);
  
  assign addEnable = aux4*2;
endmodule